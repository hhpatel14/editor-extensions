name: Release

on:
  workflow_run:
    workflows: ["CI (repo level)"]
    types:
      - completed
    branches:
      - "main"
      - "release-*"

env:
  HUSKY: 0

jobs:
  # Only proceed if CI workflow was successful and triggered by a tag
  check_trigger:
    name: Check if triggered by tag
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      is_tag: ${{ steps.check_tag.outputs.is_tag }}
      tag_name: ${{ steps.check_tag.outputs.tag_name }}
      prerelease: ${{ steps.check_tag.outputs.prerelease }}
    steps:
      - name: Check if CI was triggered by tag
        id: check_tag
        run: |
          # Check if the workflow_run was triggered by a tag push
          if [[ "${{ github.event.workflow_run.head_branch }}" == v* ]]; then
            echo "is_tag=true" >> "$GITHUB_OUTPUT"
            echo "tag_name=${{ github.event.workflow_run.head_branch }}" >> "$GITHUB_OUTPUT"

            # Determine if prerelease based on tag name
            if [[ "${{ github.event.workflow_run.head_branch }}" == *-* ]]; then
              echo "prerelease=true" >> "$GITHUB_OUTPUT"
            else
              echo "prerelease=false" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "is_tag=false" >> "$GITHUB_OUTPUT"
          fi

  generate_changelog:
    name: Generate Changelog
    needs: check_trigger
    if: ${{ needs.check_trigger.outputs.is_tag == 'true' }}
    uses: konveyor/release-tools/.github/workflows/generate-changelog.yml@main
    with:
      version: ${{ needs.check_trigger.outputs.tag_name }}
      prev_version: $(gh api repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')
      repository: ${{ github.repository }}
      ref: ${{ github.event.workflow_run.head_sha }}
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Final Release
    runs-on: ubuntu-latest
    needs: [check_trigger, generate_changelog]
    if: ${{ needs.check_trigger.outputs.is_tag == 'true' }}
    steps:
      - name: Add release details to the step summary
        run: |
          cat >> "$GITHUB_STEP_SUMMARY" <<EOF
          ## Release Information
          Tag: __${{ needs.check_trigger.outputs.tag_name }}__
          Pre-Release: __${{ needs.check_trigger.outputs.prerelease }}__
          Workflow Run ID: __${{ github.event.workflow_run.id }}__
          EOF

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Download Changelog Artifact
        uses: actions/download-artifact@v4
        with:
          name: changelog-artifact
          path: ./artifacts

      - name: Download VSIX Artifact from CI run
        uses: actions/download-artifact@v4
        with:
          name: vscode-artifact
          path: ./artifacts/vscode-extension-linux
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify Downloaded Artifacts
        run: ls -R ./artifacts

      - name: Find and set VSIX filename
        id: vsix_info
        run: |
          VSIX_FILE=$(find ./artifacts/vscode-extension-linux -name "*.vsix" -type f | head -1)
          VSIX_NAME=$(basename "$VSIX_FILE")
          echo "vsix_path=$VSIX_FILE" >> "$GITHUB_OUTPUT"
          echo "vsix_name=$VSIX_NAME" >> "$GITHUB_OUTPUT"
          echo "Found VSIX: $VSIX_NAME at $VSIX_FILE"

      - name: Set up Node.js for publishing
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Publish to VS Code Marketplace
        if: ${{ needs.check_trigger.outputs.prerelease == 'false' }}
        run: |
          echo "Publishing ${{ steps.vsix_info.outputs.vsix_path }}"
          npx vsce publish --packagePath "${{ steps.vsix_info.outputs.vsix_path }}" --releaseNotes "./artifacts/release.md"
        env:
          VSCE_PAT: ${{ secrets.VSCODE_MARKETPLACE_TOKEN }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.check_trigger.outputs.tag_name }}
          commit: ${{ github.event.workflow_run.head_sha }}
          bodyFile: ./artifacts/release.md
          artifacts: |
            ${{ steps.vsix_info.outputs.vsix_path }}
          prerelease: ${{ needs.check_trigger.outputs.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
